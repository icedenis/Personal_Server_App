@page "/personal/login"

@using Personal_Server_App.Models
@using Personal_Server_App.Interfaces

@inject IAuthenticationRepo _authRepo
@inject NavigationManager _navManager


<h1>Login </h1>
@if (!response)
{
<p>  Something went wrong </p>
}
<div>
    <EditForm Model="Model" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="email">Email Address</label>
            <InputText Id="email" class="form-control" @bind-Value="Model.Username" />
            <ValidationMessage For="@(() => Model.Username)" />
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <InputText Id="password" type="password" class="form-control" @bind-Value="Model.Password" />
            <ValidationMessage For="@(() => Model.Password)" />
        </div>

        <button type="submit" class="btn btn-primary btn-block">Login </button>

    </EditForm>
</div>


@code { 
    
            private ModelLogin Model = new ModelLogin();
            private bool response = true;
            private async Task HandleLogin()
            {
                response = await _authRepo.Login(Model);

                if (response)
                {
                    _navManager.NavigateTo("/");
                }

            } 
    
    }
